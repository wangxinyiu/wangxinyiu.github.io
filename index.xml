<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xinyi Wang</title>
    <link>https://wangxinyiu.github.io/</link>
    <description>Recent content on Xinyi Wang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 24 Jan 2024 18:00:36 -0800</lastBuildDate>
    <atom:link href="https://wangxinyiu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>💗刷题笔记</title>
      <link>https://wangxinyiu.github.io/posts/my-first-post/</link>
      <pubDate>Wed, 24 Jan 2024 18:00:36 -0800</pubDate>
      <guid>https://wangxinyiu.github.io/posts/my-first-post/</guid>
      <description>Manual implementation of data structures</description>
    </item>
    <item>
      <title>A Server Migration to AWS (Internship at Amazon)</title>
      <link>https://wangxinyiu.github.io/projects/amazonintern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wangxinyiu.github.io/projects/amazonintern/</guid>
      <description>What I did Evaluated different AWS services for server deployment, including EC2, ECS, and Step Functions, and analyzed them against our current needs. Ultimately, I opted for Step Functions for implementation and carried out the system design accordingly. Decoupled the original code into smaller units and transitioned from Python to Java. Using the code-driven AWS Cloud Development Kit (CDK) approach, we configured various AWS services including Lambda functions, S3, VPC, among others.</description>
    </item>
    <item>
      <title>Manual implementation of data structures</title>
      <link>https://wangxinyiu.github.io/posts/implementdatastructure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wangxinyiu.github.io/posts/implementdatastructure/</guid>
      <description>Implementation of Stack Using Linked List Using Array Implementation of Queue Using Linked List Using Array Implementation of Stack Using Linked List Should we use Linked List or Double-Linked List? class ListNode { int value; ListNode next; // ListNode prev; public ListNode (int value) { this.value = value; } } public class Stack { // push, pop, peek // 必须有一个head private ListNode head; private int size; // constructor -&amp;gt; 最好是把 initialization 写到 constructor 里面。 public Stack () { head = null; size = 0; } // 返回值是boolean 因为 如果超过size 需要返回false // 但是是有 public boolean push (int value) { // I assume the linked list won&amp;#39;t be full.</description>
    </item>
    <item>
      <title>PapyrusAI - An tool for use in higher education courses</title>
      <link>https://wangxinyiu.github.io/projects/papyrusai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wangxinyiu.github.io/projects/papyrusai/</guid>
      <description>About PapyrusAI was developed by the Digital Learning Lab at the University of California, Irvine, in partnership with the Samueli School of Engineering, as part of an NSF grant (#23152984).&#xA;While our initial goal is to develop this tool for use in higher education courses, we received a Proof of Product grant from UCI’s Beall Applied Innovation Center to adapt the tool for secondary school and determine the marketability and feasibility of commercializing PapyrusAI.</description>
    </item>
    <item>
      <title>StayBooking - An online stay rental application</title>
      <link>https://wangxinyiu.github.io/projects/staybooking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wangxinyiu.github.io/projects/staybooking/</guid>
      <description>What I did Deomo: https://recordit.co/cXdWcj0ahV&#xA;Designed and built a single-page web application using React. Bootstrap the development with mature component library Ant Design. Implemented the backend services based on Spring Boot to support stay upload, delete, search, and reserve functionality. Used MySQL to store user-generated data, e.g. stay information and reservation history, and utilized Google Cloud Storage to store media files for uploaded stays. Created geo index by Elasticsearch to support geo-based stay search based on user’s selected locations.</description>
    </item>
  </channel>
</rss>
